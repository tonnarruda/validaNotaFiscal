{"ast":null,"code":"var _jsxFileName = \"/Users/georgemjunior/workspace/Georgem/nf-decoder-ai/frontend/src/components/NfValidator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NfValidator = () => {\n  _s();\n  const [comparisonData, setComparisonData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const formatCurrency = value => {\n    if (typeof value !== 'number') return 'R$ 0,00';\n    return value.toLocaleString('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    });\n  };\n  const normalizeString = str => {\n    if (!str) return '';\n    return str.toString().replace(/[.\\-/]/g, '');\n  };\n  const onPdfDrop = useCallback(async acceptedFiles => {\n    if (acceptedFiles.length === 0) return;\n    setLoading(true);\n    setError('');\n    const formData = new FormData();\n    acceptedFiles.forEach(file => {\n      formData.append('files', file);\n    });\n    try {\n      const response = await fetch('/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errData = await response.json();\n        throw new Error(errData.error || 'Erro no servidor ao processar PDFs.');\n      }\n      const nfData = await response.json();\n      const newComparisonData = nfData.map(nf => ({\n        nfCnpj: nf['CNPJ (NF)'],\n        nfNumero: nf['NÃºmero da Nota (NF)'],\n        nfValor: nf['Valor (NF)'],\n        plCnpj: 'N/A',\n        plNumero: 'N/A',\n        plValor: 0.0,\n        status: 'Divergente'\n      }));\n      setComparisonData(newComparisonData);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const onExcelDrop = useCallback(acceptedFiles => {\n    if (acceptedFiles.length === 0 || comparisonData.length === 0) {\n      if (comparisonData.length === 0) {\n        setError(\"Por favor, importe os PDFs primeiro.\");\n      }\n      return;\n    }\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n    reader.onload = event => {\n      try {\n        const bstr = event.target.result;\n        const wb = XLSX.read(bstr, {\n          type: 'binary'\n        });\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname];\n        const data = XLSX.utils.sheet_to_json(ws, {\n          header: 1\n        });\n\n        // Assume header is in the first row\n        const header = data[0];\n        const cnpjIndex = header.findIndex(h => h.toLowerCase().includes('cnpj'));\n        const nfNumeroIndex = header.findIndex(h => h.toLowerCase().includes('nota'));\n        const valorIndex = header.findIndex(h => h.toLowerCase().includes('valor'));\n        if (cnpjIndex === -1 || nfNumeroIndex === -1 || valorIndex === -1) {\n          setError(\"A planilha Excel deve conter as colunas 'CNPJ', 'Nota' e 'Valor'.\");\n          return;\n        }\n        const excelDataMap = new Map();\n        data.slice(1).forEach(row => {\n          const key = `${normalizeString(row[cnpjIndex])}-${normalizeString(row[nfNumeroIndex])}`;\n          excelDataMap.set(key, {\n            cnpj: row[cnpjIndex],\n            numero: row[nfNumeroIndex],\n            valor: parseFloat(row[valorIndex]) || 0.0\n          });\n        });\n        const updatedComparisonData = comparisonData.map(item => {\n          const key = `${normalizeString(item.nfCnpj)}-${normalizeString(item.nfNumero)}`;\n          const match = excelDataMap.get(key);\n          if (match) {\n            const nfValor = parseFloat(item.nfValor);\n            const plValor = match.valor;\n            const status = Math.abs(nfValor - plValor) < 0.01 ? 'Convergente' : 'Divergente';\n            return {\n              ...item,\n              plCnpj: match.cnpj,\n              plNumero: match.numero,\n              plValor: plValor,\n              status: status\n            };\n          }\n          return item;\n        });\n        setComparisonData(updatedComparisonData);\n      } catch (err) {\n        setError(\"Erro ao processar o arquivo Excel.\");\n      }\n    };\n    reader.readAsBinaryString(file);\n  }, [comparisonData]);\n  const {\n    getRootProps: getPdfRootProps,\n    getInputProps: getPdfInputProps\n  } = useDropzone({\n    onDrop: onPdfDrop,\n    accept: {\n      'application/pdf': ['.pdf']\n    },\n    multiple: true\n  });\n  const {\n    getRootProps: getExcelRootProps,\n    getInputProps: getExcelInputProps\n  } = useDropzone({\n    onDrop: onExcelDrop,\n    accept: {\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': ['.xlsx'],\n      'application/vnd.ms-excel': ['.xls']\n    },\n    multiple: false\n  });\n  const getStatusClass = status => {\n    switch (status) {\n      case 'Convergente':\n        return 'bg-green-100 text-green-800';\n      case 'Divergente':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-8 rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-center mb-6\",\n      children: \"Validador de Notas Fiscais\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-0 left-0 w-full h-full bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-white text-xl\",\n        children: \"Processando PDFs...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\",\n      role: \"alert\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ...getPdfRootProps(),\n        className: \"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center cursor-pointer hover:border-blue-500 bg-gray-50 transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getPdfInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-blue-600 font-semibold\",\n          children: \"IMPORTAR NOTAS FISCAIS (PDF)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mt-1\",\n          children: \"Arraste e solte os PDFs aqui, ou clique para selecionar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ...getExcelRootProps(),\n        className: \"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center cursor-pointer hover:border-purple-500 bg-gray-50 transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getExcelInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-purple-600 font-semibold\",\n          children: \"IMPORTAR PLANILHA EXCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mt-1\",\n          children: \"Arraste e solte o Excel aqui, ou clique para selecionar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4 text-left text-sm font-semibold text-gray-600\",\n              children: \"CNPJ (NF)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4 text-left text-sm font-semibold text-gray-600\",\n              children: \"N\\xFAmero da Nota (NF)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4 text-left text-sm font-semibold text-gray-600\",\n              children: \"Valor (NF)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4 text-left text-sm font-semibold text-gray-600\",\n              children: \"CNPJ (Planilha)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4 text-left text-sm font-semibold text-gray-600\",\n              children: \"N\\xFAmero da Nota (Planilha)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4 text-left text-sm font-semibold text-gray-600\",\n              children: \"Valor (Planilha)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-3 px-4 text-center text-sm font-semibold text-gray-600\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: comparisonData.length > 0 ? comparisonData.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"border-b hover:bg-gray-50\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-3 px-4\",\n              children: item.nfCnpj\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-3 px-4\",\n              children: item.nfNumero\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-3 px-4\",\n              children: formatCurrency(item.nfValor)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-3 px-4\",\n              children: item.plCnpj\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-3 px-4\",\n              children: item.plNumero\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-3 px-4\",\n              children: formatCurrency(item.plValor)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-3 px-4 text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `px-3 py-1 text-xs font-medium rounded-full ${getStatusClass(item.status)}`,\n                children: item.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"7\",\n              className: \"text-center py-10 text-gray-500\",\n              children: \"Aguardando importa\\xE7\\xE3o dos arquivos...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), comparisonData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end items-center mt-4 text-sm text-gray-600\",\n      children: `Mostrando 1-${comparisonData.length} de ${comparisonData.length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(NfValidator, \"4n92RnSxsBEvnWgB4Pn3pWN5Rd0=\", false, function () {\n  return [useDropzone, useDropzone];\n});\n_c = NfValidator;\nexport default NfValidator;\nvar _c;\n$RefreshReg$(_c, \"NfValidator\");","map":{"version":3,"names":["React","useState","useCallback","useDropzone","XLSX","jsxDEV","_jsxDEV","NfValidator","_s","comparisonData","setComparisonData","loading","setLoading","error","setError","formatCurrency","value","toLocaleString","style","currency","normalizeString","str","toString","replace","onPdfDrop","acceptedFiles","length","formData","FormData","forEach","file","append","response","fetch","method","body","ok","errData","json","Error","nfData","newComparisonData","map","nf","nfCnpj","nfNumero","nfValor","plCnpj","plNumero","plValor","status","err","message","onExcelDrop","reader","FileReader","onload","event","bstr","target","result","wb","read","type","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","header","cnpjIndex","findIndex","h","toLowerCase","includes","nfNumeroIndex","valorIndex","excelDataMap","Map","slice","row","key","set","cnpj","numero","valor","parseFloat","updatedComparisonData","item","match","get","Math","abs","readAsBinaryString","getRootProps","getPdfRootProps","getInputProps","getPdfInputProps","onDrop","accept","multiple","getExcelRootProps","getExcelInputProps","getStatusClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","index","colSpan","_c","$RefreshReg$"],"sources":["/Users/georgemjunior/workspace/Georgem/nf-decoder-ai/frontend/src/components/NfValidator.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport * as XLSX from 'xlsx';\n\nconst NfValidator = () => {\n  const [comparisonData, setComparisonData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const formatCurrency = (value) => {\n    if (typeof value !== 'number') return 'R$ 0,00';\n    return value.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });\n  };\n  \n  const normalizeString = (str) => {\n    if (!str) return '';\n    return str.toString().replace(/[.\\-/]/g, '');\n  }\n\n  const onPdfDrop = useCallback(async (acceptedFiles) => {\n    if (acceptedFiles.length === 0) return;\n\n    setLoading(true);\n    setError('');\n\n    const formData = new FormData();\n    acceptedFiles.forEach(file => {\n      formData.append('files', file);\n    });\n\n    try {\n      const response = await fetch('/upload', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errData = await response.json();\n        throw new Error(errData.error || 'Erro no servidor ao processar PDFs.');\n      }\n\n      const nfData = await response.json();\n\n      const newComparisonData = nfData.map(nf => ({\n        nfCnpj: nf['CNPJ (NF)'],\n        nfNumero: nf['NÃºmero da Nota (NF)'],\n        nfValor: nf['Valor (NF)'],\n        plCnpj: 'N/A',\n        plNumero: 'N/A',\n        plValor: 0.0,\n        status: 'Divergente',\n      }));\n\n      setComparisonData(newComparisonData);\n\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const onExcelDrop = useCallback((acceptedFiles) => {\n    if (acceptedFiles.length === 0 || comparisonData.length === 0) {\n        if (comparisonData.length === 0) {\n            setError(\"Por favor, importe os PDFs primeiro.\");\n        }\n        return;\n    }\n\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n        try {\n            const bstr = event.target.result;\n            const wb = XLSX.read(bstr, { type: 'binary' });\n            const wsname = wb.SheetNames[0];\n            const ws = wb.Sheets[wsname];\n            const data = XLSX.utils.sheet_to_json(ws, { header: 1 });\n            \n            // Assume header is in the first row\n            const header = data[0];\n            const cnpjIndex = header.findIndex(h => h.toLowerCase().includes('cnpj'));\n            const nfNumeroIndex = header.findIndex(h => h.toLowerCase().includes('nota'));\n            const valorIndex = header.findIndex(h => h.toLowerCase().includes('valor'));\n\n            if(cnpjIndex === -1 || nfNumeroIndex === -1 || valorIndex === -1) {\n                setError(\"A planilha Excel deve conter as colunas 'CNPJ', 'Nota' e 'Valor'.\");\n                return;\n            }\n\n            const excelDataMap = new Map();\n            data.slice(1).forEach(row => {\n                const key = `${normalizeString(row[cnpjIndex])}-${normalizeString(row[nfNumeroIndex])}`;\n                excelDataMap.set(key, {\n                    cnpj: row[cnpjIndex],\n                    numero: row[nfNumeroIndex],\n                    valor: parseFloat(row[valorIndex]) || 0.0,\n                });\n            });\n\n            const updatedComparisonData = comparisonData.map(item => {\n                const key = `${normalizeString(item.nfCnpj)}-${normalizeString(item.nfNumero)}`;\n                const match = excelDataMap.get(key);\n\n                if (match) {\n                    const nfValor = parseFloat(item.nfValor);\n                    const plValor = match.valor;\n                    const status = Math.abs(nfValor - plValor) < 0.01 ? 'Convergente' : 'Divergente';\n\n                    return {\n                        ...item,\n                        plCnpj: match.cnpj,\n                        plNumero: match.numero,\n                        plValor: plValor,\n                        status: status,\n                    };\n                }\n                return item;\n            });\n\n            setComparisonData(updatedComparisonData);\n\n        } catch (err) {\n            setError(\"Erro ao processar o arquivo Excel.\");\n        }\n    };\n    reader.readAsBinaryString(file);\n  }, [comparisonData]);\n\n  const { getRootProps: getPdfRootProps, getInputProps: getPdfInputProps } = useDropzone({\n    onDrop: onPdfDrop,\n    accept: { 'application/pdf': ['.pdf'] },\n    multiple: true\n  });\n  \n  const { getRootProps: getExcelRootProps, getInputProps: getExcelInputProps } = useDropzone({\n    onDrop: onExcelDrop,\n    accept: { 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': ['.xlsx'], 'application/vnd.ms-excel': ['.xls'] },\n    multiple: false\n  });\n\n  const getStatusClass = (status) => {\n    switch (status) {\n      case 'Convergente': return 'bg-green-100 text-green-800';\n      case 'Divergente': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  return (\n    <div className=\"bg-white p-8 rounded-lg shadow-lg\">\n      <h1 className=\"text-3xl font-bold text-center mb-6\">Validador de Notas Fiscais</h1>\n      \n      {loading && (\n        <div className=\"fixed top-0 left-0 w-full h-full bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"text-white text-xl\">Processando PDFs...</div>\n        </div>\n      )}\n\n      {error && <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">{error}</div>}\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n        <div {...getPdfRootProps()} className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center cursor-pointer hover:border-blue-500 bg-gray-50 transition-colors\">\n          <input {...getPdfInputProps()} />\n          <p className=\"text-blue-600 font-semibold\">IMPORTAR NOTAS FISCAIS (PDF)</p>\n          <p className=\"text-sm text-gray-500 mt-1\">Arraste e solte os PDFs aqui, ou clique para selecionar</p>\n        </div>\n        <div {...getExcelRootProps()} className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center cursor-pointer hover:border-purple-500 bg-gray-50 transition-colors\">\n          <input {...getExcelInputProps()} />\n          <p className=\"text-purple-600 font-semibold\">IMPORTAR PLANILHA EXCEL</p>\n          <p className=\"text-sm text-gray-500 mt-1\">Arraste e solte o Excel aqui, ou clique para selecionar</p>\n        </div>\n      </div>\n\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full bg-white\">\n          <thead className=\"bg-gray-200\">\n            <tr>\n              <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-600\">CNPJ (NF)</th>\n              <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-600\">NÃºmero da Nota (NF)</th>\n              <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-600\">Valor (NF)</th>\n              <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-600\">CNPJ (Planilha)</th>\n              <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-600\">NÃºmero da Nota (Planilha)</th>\n              <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-600\">Valor (Planilha)</th>\n              <th className=\"py-3 px-4 text-center text-sm font-semibold text-gray-600\">Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {comparisonData.length > 0 ? (\n              comparisonData.map((item, index) => (\n                <tr key={index} className=\"border-b hover:bg-gray-50\">\n                  <td className=\"py-3 px-4\">{item.nfCnpj}</td>\n                  <td className=\"py-3 px-4\">{item.nfNumero}</td>\n                  <td className=\"py-3 px-4\">{formatCurrency(item.nfValor)}</td>\n                  <td className=\"py-3 px-4\">{item.plCnpj}</td>\n                  <td className=\"py-3 px-4\">{item.plNumero}</td>\n                  <td className=\"py-3 px-4\">{formatCurrency(item.plValor)}</td>\n                  <td className=\"py-3 px-4 text-center\">\n                    <span className={`px-3 py-1 text-xs font-medium rounded-full ${getStatusClass(item.status)}`}>\n                      {item.status}\n                    </span>\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan=\"7\" className=\"text-center py-10 text-gray-500\">\n                  Aguardando importaÃ§Ã£o dos arquivos...\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n      {comparisonData.length > 0 && \n        <div className=\"flex justify-end items-center mt-4 text-sm text-gray-600\">\n            {`Mostrando 1-${comparisonData.length} de ${comparisonData.length}`}\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default NfValidator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}